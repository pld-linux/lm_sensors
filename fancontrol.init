#!/bin/sh
#
# fancontrol	Fans speed control according to temperature service
#
# Starts after all hotplug-like things, which could load proper drivers
# for fans and dies last possible
# chkconfig:	345 09 99
#
# description:	It is crucial to proper configure this service, or severe
#		damadge could occur. For this, be sure, to run init first
#		and be sure the configuration is correct.
#
# TODO:
# - check this, case this is my first 'advanced' init script
# - maybe add some more stop control, like re-running fancontrol and killing
#   it once more, if killproc fails
#

# Source function library
. /etc/rc.d/init.d/functions

# Get service config
 [ -f /etc/sysconfig/fancontrol ] && . /etc/sysconfig/fancontrol

start() {
	# sensors deamon needs to be started
	# or at least proper modules loaded (provided by sensorsd deamon)
	if [ ! -f /var/lock/subsys/sensord ]; then
		echo "Start sensors daemon first"
		RETVAL=1
		return
	fi

	# Check if the service is already running?
	if [ -f /var/lock/subsys/fancontrol ]; then
		msg_already_running fancontrol
		return
	fi

	# Fancontrol needs to check system for pwm control
	if [ ! -f /etc/sysconfig/fancontrol ]; then
		nls "Fancontrol not initialized."
		nls "Try \`%s init' before start." "$0"
		exit 6
	fi

	msg_starting fancontrol
	# won't start without an output
	daemon --fork 'fancontrol >/dev/null'
	RETVAL=$?
	[ $RETVAL -eq 0 ] && touch /var/lock/subsys/fancontrol
}

stop() {
	if [ ! -f /var/lock/subsys/fancontrol ]; then
		msg_not_running fancontrol
		return
	fi

	# Stop daemons.
	msg_stopping fancontrol
	# it's crucial to be sure it ended ok, otherwise we get
	# the fans set and the computer working without any control
	# and that could cause MASSIVE damage
	killproc --waitforname fancontrol --waitfortime 30 fancontrol -TERM
	rm -f /var/lock/subsys/fancontrol
}

restart() {
	stop
	start
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart)
	restart
	;;
  init)
	pwmconfig
	exit $?
	;;
  status)
	status fancontrol
	RETVAL=$?
	;;
  *)
	msg_usage "$0 {start|stop|restart|init|status}"
	exit 3
esac

exit $RETVAL
